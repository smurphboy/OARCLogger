"""empty message

Revision ID: 714faed1086f
Revises: 7416ce9b0231
Create Date: 2023-04-10 14:11:10.053028

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '714faed1086f'
down_revision = '7416ce9b0231'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('qso',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('band', sa.String(length=25), nullable=True),
    sa.Column('band_rx', sa.String(length=25), nullable=True),
    sa.Column('mode', sa.String(length=25), nullable=True),
    sa.Column('submode', sa.String(length=25), nullable=True),
    sa.Column('freq', sa.String(length=25), nullable=True),
    sa.Column('freq_rx', sa.String(length=25), nullable=True),
    sa.Column('call', sa.String(length=50), nullable=True),
    sa.Column('station_callsign', sa.String(length=50), nullable=True),
    sa.Column('operator', sa.String(length=50), nullable=True),
    sa.Column('owner_callsign', sa.String(length=50), nullable=True),
    sa.Column('qso_date', sa.Date(), nullable=True),
    sa.Column('qso_date_off', sa.Date(), nullable=True),
    sa.Column('time_on', sa.Time(), nullable=True),
    sa.Column('time_off', sa.Time(), nullable=True),
    sa.Column('gridsquare', sa.String(length=10), nullable=True),
    sa.Column('my_gridsquare', sa.String(length=10), nullable=True),
    sa.Column('rst_rcvd', sa.String(length=10), nullable=True),
    sa.Column('rst_sent', sa.String(length=10), nullable=True),
    sa.Column('tx_pwr', sa.String(length=10), nullable=True),
    sa.Column('my_rig', sa.String(length=100), nullable=True),
    sa.Column('my_antenna', sa.String(length=100), nullable=True),
    sa.Column('qso_random', sa.String(length=1), nullable=True),
    sa.Column('qso_complete', sa.String(length=3), nullable=True),
    sa.Column('sat_mode', sa.String(length=25), nullable=True),
    sa.Column('sat_name', sa.String(length=25), nullable=True),
    sa.Column('srx', sa.Integer(), nullable=True),
    sa.Column('srx_string', sa.String(length=50), nullable=True),
    sa.Column('stx', sa.Integer(), nullable=True),
    sa.Column('stx_string', sa.String(length=50), nullable=True),
    sa.Column('my_sota_ref', sa.String(length=25), nullable=True),
    sa.Column('sota_ref', sa.String(length=25), nullable=True),
    sa.Column('my_pota_ref', sa.String(length=25), nullable=True),
    sa.Column('pota_ref', sa.String(length=25), nullable=True),
    sa.Column('my_iota', sa.String(length=6), nullable=True),
    sa.Column('iota', sa.String(length=6), nullable=True),
    sa.Column('my_iota_island_id', sa.Integer(), nullable=True),
    sa.Column('iota_island_id', sa.Integer(), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('my_country', sa.String(length=50), nullable=True),
    sa.Column('distance', sa.String(length=10), nullable=True),
    sa.Column('dxcc', sa.Integer(), nullable=True),
    sa.Column('my_dxcc', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('my_name', sa.String(length=50), nullable=True),
    sa.Column('my_city', sa.String(length=50), nullable=True),
    sa.Column('cqz', sa.Integer(), nullable=True),
    sa.Column('my_cq_zone', sa.Integer(), nullable=True),
    sa.Column('ituz', sa.Integer(), nullable=True),
    sa.Column('my_itu_zone', sa.Integer(), nullable=True),
    sa.Column('qsl_rcvd', sa.String(length=3), nullable=True),
    sa.Column('qsl_rcvd_via', sa.String(length=3), nullable=True),
    sa.Column('qsl_sent', sa.String(length=3), nullable=True),
    sa.Column('qsl_sent_via', sa.String(length=3), nullable=True),
    sa.Column('qslrdate', sa.Date(), nullable=True),
    sa.Column('qslsdate', sa.Date(), nullable=True),
    sa.Column('lotw_qsl_rcvd', sa.String(length=3), nullable=True),
    sa.Column('lotw_qsl_sent', sa.String(length=3), nullable=True),
    sa.Column('lotw_qslsdate', sa.Date(), nullable=True),
    sa.Column('lotw_qslrdate', sa.Date(), nullable=True),
    sa.Column('eqsl_qsl_rcvd', sa.String(length=3), nullable=True),
    sa.Column('eqsl_qsl_sent', sa.String(length=3), nullable=True),
    sa.Column('eqsl_qslsdate', sa.Date(), nullable=True),
    sa.Column('eqsl_qslrdate', sa.Date(), nullable=True),
    sa.Column('qrzcom_qso_upload_status', sa.String(length=3), nullable=True),
    sa.Column('qrzcom_qso_upload_date', sa.Date(), nullable=True),
    sa.Column('address', sa.String(length=50), nullable=True),
    sa.Column('a_index', sa.Integer(), nullable=True),
    sa.Column('k_index', sa.Integer(), nullable=True),
    sa.Column('sfi', sa.Integer(), nullable=True),
    sa.Column('ant_az', sa.Integer(), nullable=True),
    sa.Column('ant_el', sa.Integer(), nullable=True),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.Column('cont', sa.String(length=2), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('cnty', sa.String(length=50), nullable=True),
    sa.Column('my_cnty', sa.String(length=50), nullable=True),
    sa.Column('my_postal_code', sa.String(length=10), nullable=True),
    sa.Column('qth', sa.String(length=50), nullable=True),
    sa.Column('swl', sa.String(length=2), nullable=True),
    sa.Column('lat', sa.String(length=11), nullable=True),
    sa.Column('my_lat', sa.String(length=11), nullable=True),
    sa.Column('lon', sa.String(length=11), nullable=True),
    sa.Column('my_lon', sa.String(length=11), nullable=True),
    sa.Column('pfx', sa.String(length=15), nullable=True),
    sa.Column('contest_id', sa.String(length=50), nullable=True),
    sa.Column('my_wwff_ref', sa.String(length=15), nullable=True),
    sa.Column('wwff_ref', sa.String(length=15), nullable=True),
    sa.Column('my_street', sa.String(length=50), nullable=True),
    sa.Column('sig', sa.String(length=50), nullable=True),
    sa.Column('my_sig', sa.String(length=50), nullable=True),
    sa.Column('sig_info', sa.String(length=50), nullable=True),
    sa.Column('my_sig_info', sa.String(length=50), nullable=True),
    sa.Column('vucc_grids', sa.String(length=25), nullable=True),
    sa.Column('my_vucc_grids', sa.String(length=25), nullable=True),
    sa.Column('usaca_counties', sa.String(length=50), nullable=True),
    sa.Column('my_usaca_counties', sa.String(length=50), nullable=True),
    sa.Column('state', sa.String(length=25), nullable=True),
    sa.Column('my_state', sa.String(length=25), nullable=True),
    sa.Column('rig', sa.String(length=50), nullable=True),
    sa.Column('import_source', sa.String(length=255), nullable=True),
    sa.Column('import_date', sa.Date(), nullable=True),
    sa.Column('import_comments', sa.String(length=2000), nullable=True),
    sa.Column('config_id', sa.Integer(), nullable=True),
    sa.Column('precedence', sa.String(length=1), nullable=True),
    sa.Column('check', sa.Integer(), nullable=True),
    sa.Column('contest_class', sa.String(length=25), nullable=True),
    sa.Column('prop_mode', sa.String(length=50), nullable=True),
    sa.Column('ant_path', sa.String(length=10), nullable=True),
    sa.Column('ms_shower', sa.String(length=100), nullable=True),
    sa.Column('nr_pings', sa.Integer(), nullable=True),
    sa.Column('nr_bursts', sa.Integer(), nullable=True),
    sa.Column('max_bursts', sa.Integer(), nullable=True),
    sa.Column('force_init', sa.Boolean(), nullable=True),
    sa.Column('contacted_op', sa.String(length=50), nullable=True),
    sa.Column('eq_call', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['config_id'], ['configuration.id'], name=op.f('fk_qso_config_id_configuration')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_qso'))
    )
    op.create_table('qsoevent',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event', sa.Integer(), nullable=False),
    sa.Column('qso', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event'], ['event.id'], name=op.f('fk_qsoevent_event_event')),
    sa.ForeignKeyConstraint(['qso'], ['qso.id'], name=op.f('fk_qsoevent_qso_qso')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_qsoevent'))
    )
    op.drop_table('QSO')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('QSO',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"QSO_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('band', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('band_rx', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('mode', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('submode', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('freq', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('freq_rx', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('call', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('station_callsign', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('operator', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('owner_callsign', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('qso_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('qso_date_off', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('time_on', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('time_off', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('gridsquare', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('my_gridsquare', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('rst_rcvd', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('rst_sent', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('tx_pwr', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('my_rig', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('my_antenna', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('qso_random', sa.VARCHAR(length=1), autoincrement=False, nullable=True),
    sa.Column('qso_complete', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('sat_mode', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('sat_name', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('srx', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srx_string', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('stx', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('stx_string', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('my_sota_ref', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('sota_ref', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('my_iota', sa.VARCHAR(length=6), autoincrement=False, nullable=True),
    sa.Column('iota', sa.VARCHAR(length=6), autoincrement=False, nullable=True),
    sa.Column('my_iota_island_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('iota_island_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('my_country', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('distance', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('dxcc', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('my_dxcc', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('my_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('my_city', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('cqz', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('my_cq_zone', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ituz', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('my_itu_zone', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('qsl_rcvd', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('qsl_rcvd_via', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('qsl_sent', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('qsl_sent_via', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('qslrdate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('qslsdate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('lotw_qsl_rcvd', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('lotw_qsl_sent', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('lotw_qslsdate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('lotw_qslrdate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('eqsl_qsl_rcvd', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('eqsl_qsl_sent', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('eqsl_qslsdate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('eqsl_qslrdate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('qrzcom_qso_upload_status', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('qrzcom_qso_upload_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('a_index', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('k_index', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sfi', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ant_az', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ant_el', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('comment', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('cont', sa.VARCHAR(length=2), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('cnty', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('my_cnty', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('my_postal_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('qth', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('swl', sa.VARCHAR(length=2), autoincrement=False, nullable=True),
    sa.Column('lat', sa.VARCHAR(length=11), autoincrement=False, nullable=True),
    sa.Column('my_lat', sa.VARCHAR(length=11), autoincrement=False, nullable=True),
    sa.Column('lon', sa.VARCHAR(length=11), autoincrement=False, nullable=True),
    sa.Column('my_lon', sa.VARCHAR(length=11), autoincrement=False, nullable=True),
    sa.Column('pfx', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('contest_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('my_wwff_ref', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('wwff_ref', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('my_street', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('sig', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('my_sig', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('sig_info', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('my_sig_info', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('vucc_grids', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('my_vucc_grids', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('usaca_counties', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('my_usaca_counties', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('my_state', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('rig', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('import_source', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('import_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('import_comments', sa.VARCHAR(length=2000), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('config_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('precedence', sa.VARCHAR(length=1), autoincrement=False, nullable=True),
    sa.Column('check', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('contest_class', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('prop_mode', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ant_path', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('ms_shower', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('nr_pings', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('nr_bursts', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('max_bursts', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('force_init', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('contacted_op', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('eq_call', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('my_pota_ref', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('pota_ref', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['config_id'], ['configuration.id'], name='fk_QSO_config_id_configuration'),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name='fk_QSO_event_id_event'),
    sa.PrimaryKeyConstraint('id', name='pk_QSO')
    )
    op.drop_table('qsoevent')
    op.drop_table('qso')
    # ### end Alembic commands ###
